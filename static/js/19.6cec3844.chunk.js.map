{"version":3,"file":"static/js/19.6cec3844.chunk.js","mappings":"uTAAaA,EACN,CACLC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,YAAa,eACbC,MACC,yIACDC,UAAU,GARCN,EAUJ,CACPC,MAAO,UACPC,KAAM,MACNC,KAAM,SACNC,YAAa,aACbC,MACC,+FACDC,UAAU,G,oBCsDZ,EAzDiB,WAChB,IAAMC,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IACnC,GAAoCC,EAAAA,EAAAA,UAAS,MAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAMjB,IAJAC,EAAAA,EAAAA,YAAU,WACTL,EAAcL,EACd,GAAE,CAACA,IAECA,EAAL,CAEA,IAAMW,EAAoB,SAAC,GAAiC,IAAD,IAA9BC,OAAUhB,EAAoB,EAApBA,KAAMiB,EAAc,EAAdA,MAC5C,OAAOR,GAAc,SAAAS,GAAS,yBAAUA,GAAV,cAAsBlB,EAAOiB,GAA7B,GAC9B,EAEKE,EAAY,mCAAG,WAAMC,GAAN,uFAEnBA,EAAMC,iBAFa,SAIOT,GAASU,EAAAA,EAAAA,IAAYd,IAJ5B,kBAIXe,QAGPb,EAAS,gBAETc,MAAM,0DATY,gDAYnBC,QAAQC,IAAR,MAZmB,yDAAH,sDAgBlB,OACC,8BACElB,IACA,UAAC,KAAD,CAAUmB,SAAUR,EAApB,WACC,UAAC,KAAD,YACC,SAAC,KAAD,QACCS,aAAcb,EACdc,QAAQ,yHACRZ,MAAOT,EAAWR,MACdH,KAEL,SAAC,KAAD,QACC+B,aAAcb,EACdc,QAAQ,yFACRZ,MAAOT,EAAWsB,QACdjC,QAGN,SAACkC,EAAA,EAAD,CAAQhC,KAAK,SAASiC,KAAK,eAAe9B,MAAM,qBAxCzB,CA6C3B,C,gICnEK+B,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,QAAV,EAEtB7B,EAAuB,SAAA4B,GAAK,OAAIA,EAAMC,SAAS/B,cAAnB,EAM5BgC,EAAyB,SAAAF,GAC9B,IAAMC,EAAWF,EAAeC,GAC1BG,GAASC,EAAAA,EAAAA,GAAaJ,GAEtBK,EAAmBJ,EAASK,MAAMH,QAAO,qBAAGrC,KAC5CyC,cAAcC,SAASL,EADkB,IAI/C,OAAO,kBAAKH,GAAZ,IAAmBC,UAAS,kBAAMA,GAAP,IAAiBK,MAAOD,KACnD,C","sources":["pages/EditPage/fields.js","pages/EditPage/EditPage.jsx","redux/contacts/selectors.js"],"sourcesContent":["export const fields = {\n\tname: {\n\t\tlabel: 'Name:',\n\t\ttype: 'text',\n\t\tname: 'name',\n\t\tplaceholder: 'Gregor .....',\n\t\ttitle:\n\t\t\t\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n\t\trequired: true,\n\t},\n\tnumber: {\n\t\tlabel: 'Number:',\n\t\ttype: 'tel',\n\t\tname: 'number',\n\t\tplaceholder: '+380 .....',\n\t\ttitle:\n\t\t\t'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n\t\trequired: true,\n\t},\n};\n","import FormField from 'shared/components/FormField/FormFeild';\nimport Button from 'shared/components/Button/Button';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectCurrentContact } from 'redux/contacts/selectors';\nimport { useNavigate } from 'react-router-dom';\nimport { editContact } from 'redux/contacts/operations';\nimport { fields } from './fields';\n\nimport {\n\tEditForm,\n\tPositioningWrapperMain,\n} from 'modules/ContactForm/ContactForm.styled';\n\nconst EditPage = () => {\n\tconst currentContact = useSelector(selectCurrentContact);\n\tconst [formValues, setFormValues] = useState(null);\n\tconst navigate = useNavigate();\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tsetFormValues(currentContact);\n\t}, [currentContact]);\n\n\tif (!currentContact) return;\n\n\tconst handleInputChange = ({ target: { name, value } }) => {\n\t\treturn setFormValues(prevState => ({ ...prevState, [name]: value }));\n\t};\n\n\tconst onFormSubmit = async event => {\n\t\ttry {\n\t\t\tevent.preventDefault();\n\n\t\t\tconst { payload } = await dispatch(editContact(formValues));\n\n\t\t\tif (payload) {\n\t\t\t\tnavigate('/my-contacts');\n\t\t\t} else {\n\t\t\t\talert('Contact with such names is already in your phone book.');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{formValues && (\n\t\t\t\t<EditForm onSubmit={onFormSubmit}>\n\t\t\t\t\t<PositioningWrapperMain>\n\t\t\t\t\t\t<FormField\n\t\t\t\t\t\t\thandleChange={handleInputChange}\n\t\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n\t\t\t\t\t\t\tvalue={formValues.name}\n\t\t\t\t\t\t\t{...fields.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormField\n\t\t\t\t\t\t\thandleChange={handleInputChange}\n\t\t\t\t\t\t\tpattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n\t\t\t\t\t\t\tvalue={formValues.number}\n\t\t\t\t\t\t\t{...fields.number}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PositioningWrapperMain>\n\t\t\t\t\t<Button type=\"submit\" text=\"Save changes\" title=\"Save changes\" />\n\t\t\t\t</EditForm>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default EditPage;\n","import { selectFilter } from 'redux/filter/selectors';\n\nconst selectContacts = state => state.contacts;\n\nconst selectCurrentContact = state => state.contacts.currentContact;\n\nconst selectIsLoading = state => state.contacts.isLoading;\n\nconst selectError = state => state.contacts.error;\n\nconst selectFilteredContacts = state => {\n\tconst contacts = selectContacts(state);\n\tconst filter = selectFilter(state);\n\n\tconst filteredContacts = contacts.items.filter(({ name }) =>\n\t\tname.toLowerCase().includes(filter)\n\t);\n\n\treturn { ...state, contacts: { ...contacts, items: filteredContacts } };\n};\n\nexport {\n\tselectContacts,\n\tselectCurrentContact,\n\tselectIsLoading,\n\tselectError,\n\tselectFilteredContacts,\n};\n"],"names":["fields","label","type","name","placeholder","title","required","currentContact","useSelector","selectCurrentContact","useState","formValues","setFormValues","navigate","useNavigate","dispatch","useDispatch","useEffect","handleInputChange","target","value","prevState","onFormSubmit","event","preventDefault","editContact","payload","alert","console","log","onSubmit","handleChange","pattern","number","Button","text","selectContacts","state","contacts","selectFilteredContacts","filter","selectFilter","filteredContacts","items","toLowerCase","includes"],"sourceRoot":""}