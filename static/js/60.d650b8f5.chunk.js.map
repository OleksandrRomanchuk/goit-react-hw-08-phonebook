{"version":3,"file":"static/js/60.d650b8f5.chunk.js","mappings":"2RA6FA,UA7EiB,WAChB,IAAMA,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IACnC,GAAoCC,EAAAA,EAAAA,UAAS,MAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACYC,GAAWC,EAAAA,EAAAA,MAAfC,GACFC,GAASR,EAAAA,EAAAA,IAAYS,EAAAA,GACrBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAUjB,IARAC,EAAAA,EAAAA,YAAU,WACTV,EAAcL,EACd,GAAE,CAACA,KAEJe,EAAAA,EAAAA,YAAU,WACTF,GAASG,EAAAA,EAAAA,IAAiBV,GAC1B,GAAE,CAACO,EAAUP,IAETN,EAAL,CAEA,IAAMiB,EAAoB,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAC5C,OAAOf,GAAc,SAAAgB,GAAS,yBAAUA,GAAV,cAAsBF,EAAOC,GAA7B,GAC9B,EAEKE,EAAY,mCAAG,WAAMC,GAAN,uFAEnBA,EAAMC,iBAFa,SAIOX,GAASY,EAAAA,EAAAA,IAAYrB,IAJ5B,kBAIXsB,QAGPf,EAAS,gBAETgB,MAAM,0DATY,gDAYnBC,QAAQC,IAAR,MAZmB,yDAAH,sDAgBlB,OACC,8BACEzB,IAAeK,IACf,UAAC,KAAD,CAAUqB,SAAUR,EAApB,WACC,UAAC,KAAD,YACC,UAAC,KAAD,oBAEC,SAAC,KAAD,CACCS,SAAUd,EACVe,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,yIACNd,MAAOhB,EAAWe,KAClBgB,YAAY,eACZC,UAAQ,QAGV,UAAC,KAAD,4BAEC,SAAC,KAAD,CACCL,SAAUd,EACVe,KAAK,MACLb,KAAK,SACLc,QAAQ,yFACRC,MAAM,+FACNd,MAAOhB,EAAWiC,OAClBF,YAAY,aACZC,UAAQ,WAIX,SAAC,KAAD,CAAWJ,KAAK,SAAhB,8BAtDuB,CA2D3B,C,gICzFKM,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,QAAV,EAEtBtC,EAAuB,SAAAqC,GAAK,OAAIA,EAAMC,SAASxC,cAAnB,EAM5ByC,EAAyB,SAAAF,GAC9B,IAAMC,EAAWF,EAAeC,GAC1B9B,GAASC,EAAAA,EAAAA,GAAa6B,GAEtBG,EAAmBF,EAASG,MAAMlC,QAAO,qBAAGU,KAC5CyB,cAAcC,SAASpC,EADkB,IAI/C,OAAO,kBAAK8B,GAAZ,IAAmBC,UAAS,kBAAMA,GAAP,IAAiBG,MAAOD,KACnD,C","sources":["pages/EditPage/EditPage.jsx","redux/contacts/contactSelectors.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectCurrentContact } from 'redux/contacts/contactSelectors';\nimport { selectFilter } from 'redux/filter/filterSelectors';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { editContact } from 'redux/contacts/contactsOperations';\nimport { fetchContactById } from 'redux/contacts/contactsOperations';\n\nimport {\n\tEditForm,\n\tPositioningWrapperMain,\n\tLabel,\n\tInput,\n\tSubmitBtn,\n} from 'shared/components/ContactForm/ContactForm.styled';\n\nconst EditPage = () => {\n\tconst currentContact = useSelector(selectCurrentContact);\n\tconst [formValues, setFormValues] = useState(null);\n\tconst { id: itemId } = useParams();\n\tconst filter = useSelector(selectFilter);\n\tconst navigate = useNavigate();\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tsetFormValues(currentContact);\n\t}, [currentContact]);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchContactById(itemId));\n\t}, [dispatch, itemId]);\n\n\tif (!currentContact) return;\n\n\tconst handleInputChange = ({ target: { name, value } }) => {\n\t\treturn setFormValues(prevState => ({ ...prevState, [name]: value }));\n\t};\n\n\tconst onFormSubmit = async event => {\n\t\ttry {\n\t\t\tevent.preventDefault();\n\n\t\t\tconst { payload } = await dispatch(editContact(formValues));\n\n\t\t\tif (payload) {\n\t\t\t\tnavigate('/my-contacts');\n\t\t\t} else {\n\t\t\t\talert('Contact with such names is already in your phone book.');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{formValues && !filter && (\n\t\t\t\t<EditForm onSubmit={onFormSubmit}>\n\t\t\t\t\t<PositioningWrapperMain>\n\t\t\t\t\t\t<Label>\n\t\t\t\t\t\t\tName:\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n\t\t\t\t\t\t\t\ttitle=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n\t\t\t\t\t\t\t\tvalue={formValues.name}\n\t\t\t\t\t\t\t\tplaceholder=\"Gregor .....\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t<Label>\n\t\t\t\t\t\t\tPhone number:\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\t\t\tname=\"number\"\n\t\t\t\t\t\t\t\tpattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n\t\t\t\t\t\t\t\ttitle=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n\t\t\t\t\t\t\t\tvalue={formValues.number}\n\t\t\t\t\t\t\t\tplaceholder=\"+380 .....\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t</PositioningWrapperMain>\n\t\t\t\t\t<SubmitBtn type=\"submit\">Save changes</SubmitBtn>\n\t\t\t\t</EditForm>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default EditPage;\n","import { selectFilter } from 'redux/filter/filterSelectors';\n\nconst selectContacts = state => state.contacts;\n\nconst selectCurrentContact = state => state.contacts.currentContact;\n\nconst selectIsLoading = state => state.contacts.isLoading;\n\nconst selectError = state => state.contacts.error;\n\nconst selectFilteredContacts = state => {\n\tconst contacts = selectContacts(state);\n\tconst filter = selectFilter(state);\n\n\tconst filteredContacts = contacts.items.filter(({ name }) =>\n\t\tname.toLowerCase().includes(filter)\n\t);\n\n\treturn { ...state, contacts: { ...contacts, items: filteredContacts } };\n};\n\nexport {\n\tselectContacts,\n\tselectCurrentContact,\n\tselectIsLoading,\n\tselectError,\n\tselectFilteredContacts,\n};\n"],"names":["currentContact","useSelector","selectCurrentContact","useState","formValues","setFormValues","itemId","useParams","id","filter","selectFilter","navigate","useNavigate","dispatch","useDispatch","useEffect","fetchContactById","handleInputChange","target","name","value","prevState","onFormSubmit","event","preventDefault","editContact","payload","alert","console","log","onSubmit","onChange","type","pattern","title","placeholder","required","number","selectContacts","state","contacts","selectFilteredContacts","filteredContacts","items","toLowerCase","includes"],"sourceRoot":""}