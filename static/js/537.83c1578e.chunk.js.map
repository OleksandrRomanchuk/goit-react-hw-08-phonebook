{"version":3,"file":"static/js/537.83c1578e.chunk.js","mappings":"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","sources":["shared/components/BtnsList/BtnsList.styled.jsx","shared/components/BtnsList/BtnsList.jsx","shared/components/ContactList/ContactItem/ContactItem.styled.jsx","shared/components/ContactList/ContactItem/ContactItem.jsx","shared/components/Notification/Notification.styled.jsx","shared/components/Notification/Notification.jsx","shared/components/ContactList/ContactList.styled.jsx","shared/components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/ContactsPage.jsx","redux/contacts/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BtnList = styled.ul`\n\tdisplay: flex;\n\tgap: 10px;\n\n\tmargin-left: auto;\n`;\n\nexport const DeleteBtn = styled.button`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\twidth: 20px;\n\theight: 20px;\n\n\tfont-size: 14px;\n\n\tborder-radius: 50%;\n\tborder: none;\n\toutline: none;\n\tcursor: pointer;\n\n\topacity: 0.4;\n\n\ttransition: opacity 300ms ease, background-color 300ms ease, color 300ms ease,\n\t\tbox-shadow 300ms ease;\n\n\t:hover,\n\t:focus {\n\t\tcolor: #ffffff;\n\n\t\topacity: 1;\n\t\tbackground-color: rgba(250, 0, 46, 1);\n\t\tbox-shadow: 0px 0px 5px 2px rgba(250, 0, 46, 1);\n\t}\n`;\n\nexport const EditBtn = styled(Link)`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\twidth: 20px;\n\theight: 20px;\n\n\tfont-size: 14px;\n\tcolor: #000000;\n\n\tbackground-color: #f0f0f0;\n\tborder-radius: 50%;\n\tborder: none;\n\toutline: none;\n\n\topacity: 0.4;\n\n\ttransition: opacity 300ms ease, background-color 300ms ease, color 300ms ease,\n\t\tbox-shadow 300ms ease, color 300ms ease;\n\n\t:hover,\n\t:focus {\n\t\tcolor: #ffffff;\n\n\t\topacity: 1;\n\n\t\tbackground-color: rgba(241, 178, 17, 1);\n\t\tbox-shadow: 0px 0px 5px 2px rgba(241, 178, 17, 1);\n\t}\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { selectCurrentContact, selectContacts } from 'redux/contacts/selectors';\nimport { setCurrentContact } from 'redux/contacts/actions';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { TiUserDeleteOutline } from 'react-icons/ti';\nimport { BiEditAlt } from 'react-icons/bi';\n\nimport { BtnList, DeleteBtn, EditBtn } from './BtnsList.styled';\n\nconst BtnsList = ({ id }) => {\n\tconst { items } = useSelector(selectContacts);\n\tconst contact = useSelector(selectCurrentContact);\n\tconst dispatch = useDispatch();\n\tconst navigate = useNavigate();\n\n\tconst deleteBtnClickHandler = id => {\n\t\tdispatch(deleteContact(id));\n\t\tif (contact && contact.id === id) {\n\t\t\tnavigate('/my-contacts');\n\t\t}\n\t};\n\n\tconst editBtnClickHandler = id => {\n\t\tconst currentContact = items.filter(item => item.id === id);\n\n\t\tdispatch(setCurrentContact(currentContact[0]));\n\t};\n\n\treturn (\n\t\t<BtnList>\n\t\t\t<li>\n\t\t\t\t<EditBtn\n\t\t\t\t\tto={`/my-contacts/edit/${id}`}\n\t\t\t\t\tonClick={() => editBtnClickHandler(id)}\n\t\t\t\t\ttitle=\"Edit contact\"\n\t\t\t\t>\n\t\t\t\t\t<BiEditAlt />\n\t\t\t\t</EditBtn>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<DeleteBtn\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => deleteBtnClickHandler(id)}\n\t\t\t\t\ttitle=\"Delete contact\"\n\t\t\t\t>\n\t\t\t\t\t<TiUserDeleteOutline />\n\t\t\t\t</DeleteBtn>\n\t\t\t</li>\n\t\t</BtnList>\n\t);\n};\n\nBtnsList.propTypes = {\n\tid: PropTypes.string.isRequired,\n};\n\nexport default BtnsList;\n","import styled from 'styled-components';\n\nexport const ContactWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 5px;\n`;\n\nexport const ContactName = styled.p`\n\tfont-size: 14px;\n\tfont-weight: 600;\n`;\n\nexport const PhoneNumber = styled.p`\n\tpadding-left: 35px;\n\n\tfont-size: 12px;\n\tcolor: rgba(158, 158, 158, 1);\n`;\n","import PropTypes from 'prop-types';\nimport BtnsList from 'shared/components/BtnsList/BtnsList';\n\nimport { ContactWrapper, ContactName, PhoneNumber } from './ContactItem.styled';\n\nconst ContactItem = ({ contact: { name, number, id } }) => {\n\treturn (\n\t\t<>\n\t\t\t<ContactWrapper>\n\t\t\t\t<ContactName>{name}</ContactName>\n\t\t\t\t<PhoneNumber>{number}</PhoneNumber>\n\t\t\t</ContactWrapper>\n\t\t\t<ContactWrapper>\n\t\t\t\t<BtnsList id={id} />\n\t\t\t</ContactWrapper>\n\t\t</>\n\t);\n};\n\nContactItem.propTypes = {\n\tcontact: PropTypes.shape({\n\t\tname: PropTypes.string.isRequired,\n\t\tnumber: PropTypes.string.isRequired,\n\t\tid: PropTypes.string.isRequired,\n\t}),\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const NotifyMessage = styled.p`\n\tmin-height: 200px;\n\tmax-height: 200px;\n\n\tmargin-top: 20px;\n\tpadding-top: 30px;\n\n\tfont-size: 12px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { NotifyMessage } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n\treturn <NotifyMessage>{message}</NotifyMessage>;\n};\n\nNotification.propTypes = {\n\tmessage: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n\tposition: relative;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 10px;\n\n\twidth: 100%;\n\tmax-height: calc(100vh - 140px);\n\tmin-height: calc(100vh - 140px);\n\tpadding-right: 5px;\n\tpadding-left: 5px;\n\n\toverflow-y: scroll;\n\n\t::-webkit-scrollbar {\n\t\twidth: 4px;\n\t}\n\n\t::-webkit-scrollbar-thumb {\n\t\tbackground-color: rgba(158, 158, 158, 1);\n\t\tborder-radius: 2px;\n\t}\n`;\n\nexport const ListItem = styled.li`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\n\tpadding: 10px 20px;\n\n\tbox-shadow: inset 0px 0px 3px 0px rgba(158, 158, 158, 1);\n\tborder-radius: 3px;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport ContactItem from './ContactItem/ContactItem';\nimport Notification from '../Notification/Notification';\n\nimport { List, ListItem } from './ContactList.styled';\n\nconst ContactList = () => {\n\tconst {\n\t\tcontacts: { items },\n\t} = useSelector(selectFilteredContacts);\n\n\tconst areContacts = Boolean(items.length);\n\n\tconst listItems = items.map(contact => {\n\t\treturn (\n\t\t\t<ListItem key={contact.id}>\n\t\t\t\t<ContactItem contact={contact} />\n\t\t\t</ListItem>\n\t\t);\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t{!areContacts && (\n\t\t\t\t<Notification message=\"There is no contact with such name.\" />\n\t\t\t)}\n\n\t\t\t{areContacts && <List>{listItems}</List>}\n\t\t</>\n\t);\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const LeftContainer = styled.div`\n\tposition: relative;\n\n\tdisplay: flex;\n\tjustify-content: center;\n\n\twidth: 40%;\n\tmax-height: calc(100vh - 140px);\n\tmin-height: calc(100vh - 140px);\n\n\tborder-radius: 10px;\n`;\n\nexport const RigthContainer = styled.div`\n\tposition: relative;\n\n\twidth: 60%;\n\tmax-height: calc(100vh - 140px);\n\tmin-height: calc(100vh - 140px);\n\tpadding: 2px;\n\n\tbox-shadow: inset 0px 0px 3px 0px rgba(158, 158, 158, 1);\n\tborder-radius: 10px;\n\toverflow-y: scroll;\n\n\t::-webkit-scrollbar {\n\t\twidth: 4px;\n\t}\n\n\t::-webkit-scrollbar-thumb {\n\t\tbackground-color: rgba(158, 158, 158, 1);\n\t\tborder-radius: 2px;\n\t}\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport ContactList from 'shared/components/ContactList/ContactList';\nimport Notification from 'shared/components/Notification/Notification';\n\nimport { LeftContainer, RigthContainer } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n\tconst dispatch = useDispatch();\n\tconst { items, isLoading, error } = useSelector(selectContacts);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchContacts());\n\t}, [dispatch]);\n\n\tconst areContacts = Boolean(items.length);\n\n\treturn (\n\t\t<>\n\t\t\t<LeftContainer>\n\t\t\t\t{!areContacts && !isLoading && (\n\t\t\t\t\t<Notification message=\"There are no contacts yet.\" />\n\t\t\t\t)}\n\t\t\t\t{areContacts && !error && <ContactList />}\n\t\t\t\t{error && (\n\t\t\t\t\t<Notification message=\"Something went wrong! Please reload the page or try again later.\" />\n\t\t\t\t)}\n\t\t\t</LeftContainer>\n\t\t\t<RigthContainer>\n\t\t\t\t<Suspense>\n\t\t\t\t\t<Outlet />\n\t\t\t\t</Suspense>\n\t\t\t</RigthContainer>\n\t\t</>\n\t);\n};\n\nexport default ContactsPage;\n","import { selectFilter } from 'redux/filter/selectors';\n\nconst selectContacts = state => state.contacts;\n\nconst selectCurrentContact = state => state.contacts.currentContact;\n\nconst selectIsLoading = state => state.contacts.isLoading;\n\nconst selectError = state => state.contacts.error;\n\nconst selectFilteredContacts = state => {\n\tconst contacts = selectContacts(state);\n\tconst filter = selectFilter(state);\n\n\tconst filteredContacts = contacts.items.filter(({ name }) =>\n\t\tname.toLowerCase().includes(filter)\n\t);\n\n\treturn { ...state, contacts: { ...contacts, items: filteredContacts } };\n};\n\nexport {\n\tselectContacts,\n\tselectCurrentContact,\n\tselectIsLoading,\n\tselectError,\n\tselectFilteredContacts,\n};\n"],"names":["BtnList","styled","DeleteBtn","EditBtn","Link","id","items","useSelector","selectContacts","contact","selectCurrentContact","dispatch","useDispatch","navigate","useNavigate","to","onClick","currentContact","filter","item","setCurrentContact","editBtnClickHandler","title","type","deleteContact","deleteBtnClickHandler","ContactWrapper","ContactName","PhoneNumber","name","number","NotifyMessage","message","List","ListItem","selectFilteredContacts","contacts","areContacts","Boolean","length","listItems","map","LeftContainer","RigthContainer","isLoading","error","useEffect","fetchContacts","Suspense","state","selectFilter","filteredContacts","toLowerCase","includes"],"sourceRoot":""}