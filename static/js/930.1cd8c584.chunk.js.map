{"version":3,"file":"static/js/930.1cd8c584.chunk.js","mappings":"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","sources":["components/BtnsList/BtnsList.styled.jsx","components/BtnsList/BtnsList.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/ContactList/ContactItem/ContactItem.styled.jsx","components/ContactList/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx","pages/ContactsPage/ContactsPage.styled.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BtnList = styled.ul`\n\tdisplay: flex;\n\tgap: 10px;\n\n\tmargin-left: auto;\n`;\n\nexport const DeleteBtn = styled.button`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\twidth: 20px;\n\theight: 20px;\n\n\tfont-size: 14px;\n\n\tborder-radius: 50%;\n\tborder: none;\n\toutline: none;\n\tcursor: pointer;\n\n\topacity: 0.4;\n\n\ttransition: opacity 300ms ease, background-color 300ms ease, color 300ms ease,\n\t\tbox-shadow 300ms ease;\n\n\t:hover,\n\t:focus {\n\t\tcolor: #ffffff;\n\n\t\topacity: 1;\n\t\tbackground-color: rgba(250, 0, 46, 1);\n\t\tbox-shadow: 0px 0px 5px 2px rgba(250, 0, 46, 1);\n\t}\n`;\n\nexport const DetailBtn = styled(Link)`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\twidth: 20px;\n\theight: 20px;\n\n\tfont-size: 14px;\n\tcolor: #000000;\n\n\tbackground-color: #f0f0f0;\n\tborder-radius: 50%;\n\tborder: none;\n\toutline: none;\n\n\topacity: 0.4;\n\n\ttransition: opacity 300ms ease, background-color 300ms ease, color 300ms ease,\n\t\tbox-shadow 300ms ease;\n\n\t:hover,\n\t:focus {\n\t\tcolor: #ffffff;\n\n\t\topacity: 1;\n\t\tbackground-color: rgba(24, 107, 184, 1);\n\t\tbox-shadow: 0px 0px 5px 2px rgba(24, 107, 184, 1);\n\t}\n`;\n\nexport const EditBtn = styled(DetailBtn)`\n\t:hover,\n\t:focus {\n\t\tbackground-color: rgba(241, 178, 17, 1);\n\t\tbox-shadow: 0px 0px 5px 2px rgba(241, 178, 17, 1);\n\t}\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { selectCurrentContact } from 'redux/selectors';\nimport { deleteContact } from 'redux/operations';\nimport { TiUserDeleteOutline } from 'react-icons/ti';\nimport { CgDetailsMore } from 'react-icons/cg';\nimport { BiEditAlt } from 'react-icons/bi';\n\nimport { BtnList, DeleteBtn, DetailBtn, EditBtn } from './BtnsList.styled';\n\nconst BtnsList = ({ id }) => {\n\tconst contact = useSelector(selectCurrentContact);\n\tconst dispatch = useDispatch();\n\tconst location = useLocation();\n\tconst navigate = useNavigate();\n\tconst isOnGroupsPage = Boolean(location.pathname.includes('my-groups'));\n\n\tconst deleteBtnClickHandler = id => {\n\t\tdispatch(deleteContact(id));\n\t\tif (contact && contact.id === id) {\n\t\t\tnavigate('/my-contacts');\n\t\t}\n\t};\n\n\treturn (\n\t\t<BtnList>\n\t\t\t<li>\n\t\t\t\t<DetailBtn\n\t\t\t\t\tto={isOnGroupsPage ? `/my-contacts/${id}/details` : id}\n\t\t\t\t\tstate={{ from: location }}\n\t\t\t\t\ttitle=\"Show more details\"\n\t\t\t\t>\n\t\t\t\t\t<CgDetailsMore />\n\t\t\t\t</DetailBtn>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<EditBtn\n\t\t\t\t\tto={`/my-contacts/edit/${id}`}\n\t\t\t\t\tstate={{ from: location }}\n\t\t\t\t\ttitle=\"Edit contact\"\n\t\t\t\t>\n\t\t\t\t\t<BiEditAlt />\n\t\t\t\t</EditBtn>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<DeleteBtn\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => deleteBtnClickHandler(id)}\n\t\t\t\t\ttitle=\"Delete contact\"\n\t\t\t\t>\n\t\t\t\t\t<TiUserDeleteOutline />\n\t\t\t\t</DeleteBtn>\n\t\t\t</li>\n\t\t</BtnList>\n\t);\n};\n\nBtnsList.propTypes = {\n\tid: PropTypes.string.isRequired,\n};\n\nexport default BtnsList;\n","import styled from 'styled-components';\n\nexport const LoaderBackdrop = styled.div`\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\tbackground-color: rgba(158, 158, 158, 0.5);\n\n\tpointer-events: none;\n`;\n","import { ColorRing } from 'react-loader-spinner';\nimport { LoaderBackdrop } from './Loader.styled';\n\nconst Loader = () => {\n\treturn (\n\t\t<LoaderBackdrop>\n\t\t\t<ColorRing\n\t\t\t\tvisible={true}\n\t\t\t\theight=\"120\"\n\t\t\t\twidth=\"120\"\n\t\t\t\tariaLabel=\"blocks-loading\"\n\t\t\t\twrapperStyle={{}}\n\t\t\t\twrapperClass=\"blocks-wrapper\"\n\t\t\t\tcolors={[\n\t\t\t\t\t'rgba(250, 0, 46, 1)',\n\t\t\t\t\t'rgba(232, 121, 17, 1)',\n\t\t\t\t\t'rgba(241, 178, 17, 1)',\n\t\t\t\t\t'rgba(42, 153, 159, 1)',\n\t\t\t\t\t'rgba(24, 107, 184, 1)',\n\t\t\t\t]}\n\t\t\t/>\n\t\t</LoaderBackdrop>\n\t);\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const NotifyMessage = styled.p`\n\tmin-height: 200px;\n\tmax-height: 200px;\n\n\tmargin-top: 20px;\n\tpadding-top: 30px;\n\n\tfont-size: 12px;\n`;\n","import PropTypes from 'prop-types';\nimport { NotifyMessage } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n\treturn <NotifyMessage>{message}</NotifyMessage>;\n};\n\nNotification.propTypes = {\n\tmessage: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ContactWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 5px;\n`;\n\nexport const ContactName = styled.p`\n\tfont-size: 14px;\n\tfont-weight: 600;\n`;\n\nexport const PhoneNumber = styled.p`\n\tpadding-left: 35px;\n\n\tfont-size: 12px;\n\tcolor: rgba(158, 158, 158, 1);\n`;\n\nexport const BtnList = styled.ul`\n\tdisplay: flex;\n\tgap: 10px;\n\n\tmargin-left: auto;\n`;\n\nexport const DeleteBtn = styled.button`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\twidth: 20px;\n\theight: 20px;\n\n\tfont-size: 14px;\n\n\tborder-radius: 50%;\n\tborder: none;\n\toutline: none;\n\tcursor: pointer;\n\n\topacity: 0.4;\n\n\ttransition: opacity 300ms ease, background-color 300ms ease, color 300ms ease,\n\t\tbox-shadow 300ms ease;\n\n\t:hover,\n\t:focus {\n\t\tcolor: #ffffff;\n\n\t\topacity: 1;\n\t\tbackground-color: rgba(250, 0, 46, 1);\n\t\tbox-shadow: 0px 0px 5px 2px rgba(250, 0, 46, 1);\n\t}\n`;\n\nexport const DetailBtn = styled(Link)`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\twidth: 20px;\n\theight: 20px;\n\n\tfont-size: 14px;\n\tcolor: #000000;\n\n\tbackground-color: #f0f0f0;\n\tborder-radius: 50%;\n\tborder: none;\n\toutline: none;\n\n\topacity: 0.4;\n\n\ttransition: opacity 300ms ease, background-color 300ms ease, color 300ms ease,\n\t\tbox-shadow 300ms ease;\n\n\t:hover,\n\t:focus {\n\t\tcolor: #ffffff;\n\n\t\topacity: 1;\n\t\tbackground-color: rgba(24, 107, 184, 1);\n\t\tbox-shadow: 0px 0px 5px 2px rgba(24, 107, 184, 1);\n\t}\n`;\n\nexport const EditBtn = styled(DetailBtn)`\n\t:hover,\n\t:focus {\n\t\tbackground-color: rgba(241, 178, 17, 1);\n\t\tbox-shadow: 0px 0px 5px 2px rgba(241, 178, 17, 1);\n\t}\n`;\n","import PropTypes from 'prop-types';\nimport BtnsList from 'components/BtnsList/BtnsList';\nimport { ContactWrapper, ContactName, PhoneNumber } from './ContactItem.styled';\n\nconst ContactItem = ({ contact: { name, phoneNumber, id } }) => {\n\treturn (\n\t\t<>\n\t\t\t<ContactWrapper>\n\t\t\t\t<ContactName>{name}</ContactName>\n\t\t\t\t<PhoneNumber>{phoneNumber}</PhoneNumber>\n\t\t\t</ContactWrapper>\n\t\t\t<ContactWrapper>\n\t\t\t\t<BtnsList id={id} />\n\t\t\t</ContactWrapper>\n\t\t</>\n\t);\n};\n\nContactItem.propTypes = {\n\tcontact: PropTypes.shape({\n\t\tname: PropTypes.string.isRequired,\n\t\tphoneNumber: PropTypes.string.isRequired,\n\t\tid: PropTypes.string.isRequired,\n\t}),\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n\tposition: relative;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 10px;\n\n\twidth: 100%;\n\tmax-height: calc(100vh - 140px);\n\tmin-height: calc(100vh - 140px);\n\tpadding-right: 5px;\n\tpadding-left: 5px;\n\n\toverflow-y: scroll;\n\n\t::-webkit-scrollbar {\n\t\twidth: 4px;\n\t}\n\n\t::-webkit-scrollbar-thumb {\n\t\tbackground-color: rgba(158, 158, 158, 1);\n\t\tborder-radius: 2px;\n\t}\n`;\n\nexport const ListItem = styled.li`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\n\tpadding: 10px 20px;\n\n\tbox-shadow: inset 0px 0px 3px 0px rgba(158, 158, 158, 1);\n\tborder-radius: 3px;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/selectors';\nimport ContactItem from 'components/ContactList/ContactItem/ContactItem';\nimport Notification from 'components/Notification/Notification';\nimport { List, ListItem } from './ContactList.styled';\n\nconst ContactList = () => {\n\tconst {\n\t\tcontacts: { items },\n\t} = useSelector(selectFilteredContacts);\n\n\tconst areContacts = Boolean(items.length);\n\n\tconst listItems = items.map(contact => {\n\t\treturn (\n\t\t\t<ListItem key={contact.id}>\n\t\t\t\t<ContactItem contact={contact} />\n\t\t\t</ListItem>\n\t\t);\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t{!areContacts && (\n\t\t\t\t<Notification message=\"There is no contact with such name.\" />\n\t\t\t)}\n\n\t\t\t{areContacts && <List>{listItems}</List>}\n\t\t</>\n\t);\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport ContactList from 'components/ContactList/ContactList';\nimport Notification from 'components/Notification/Notification';\nimport Loader from 'components/Loader/Loader';\n\nimport { LeftContainer, RigthContainer } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n\tconst dispatch = useDispatch();\n\tconst { items, isLoading, error } = useSelector(selectContacts);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchContacts());\n\t}, [dispatch]);\n\n\tconst areContacts = Boolean(items.length);\n\n\treturn (\n\t\t<>\n\t\t\t<LeftContainer>\n\t\t\t\t{isLoading && <Loader />}\n\t\t\t\t{!areContacts && !isLoading && (\n\t\t\t\t\t<Notification message=\"There are no contacts yet.\" />\n\t\t\t\t)}\n\t\t\t\t{areContacts && !error && <ContactList />}\n\t\t\t\t{error && (\n\t\t\t\t\t<Notification message=\"Something went wrong! Please reload the page or try again later.\" />\n\t\t\t\t)}\n\t\t\t</LeftContainer>\n\t\t\t<RigthContainer>\n\t\t\t\t<Suspense>\n\t\t\t\t\t<Outlet />\n\t\t\t\t</Suspense>\n\t\t\t</RigthContainer>\n\t\t</>\n\t);\n};\n\nexport default ContactsPage;\n","import styled from 'styled-components';\n\nexport const LeftContainer = styled.div`\n\tposition: relative;\n\n\tdisplay: flex;\n\tjustify-content: center;\n\n\twidth: 40%;\n\tmax-height: calc(100vh - 140px);\n\tmin-height: calc(100vh - 140px);\n\n\tborder-radius: 10px;\n`;\n\nexport const RigthContainer = styled.div`\n\tposition: relative;\n\n\twidth: 60%;\n\tmax-height: calc(100vh - 140px);\n\tmin-height: calc(100vh - 140px);\n\tpadding: 2px;\n\n\tbox-shadow: inset 0px 0px 3px 0px rgba(158, 158, 158, 1);\n\tborder-radius: 10px;\n\toverflow-y: scroll;\n\n\t::-webkit-scrollbar {\n\t\twidth: 4px;\n\t}\n\n\t::-webkit-scrollbar-thumb {\n\t\tbackground-color: rgba(158, 158, 158, 1);\n\t\tborder-radius: 2px;\n\t}\n`;\n"],"names":["BtnList","styled","DeleteBtn","DetailBtn","Link","EditBtn","id","contact","useSelector","selectCurrentContact","dispatch","useDispatch","location","useLocation","navigate","useNavigate","isOnGroupsPage","Boolean","pathname","includes","to","state","from","title","type","onClick","deleteContact","deleteBtnClickHandler","LoaderBackdrop","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","NotifyMessage","message","ContactWrapper","ContactName","PhoneNumber","name","phoneNumber","BtnsList","List","ListItem","items","selectFilteredContacts","contacts","areContacts","length","listItems","map","Notification","selectContacts","isLoading","error","useEffect","fetchContacts","Loader","Suspense","LeftContainer","RigthContainer"],"sourceRoot":""}